#!/bin/bash

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PYTHON –ú–û–î–£–õ–ï–ô –î–õ–Ø COMFYUI"
echo "=========================================="
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥—É–ª—è Python
check_module() {
    local module_name=$1
    local import_name=$2
    
    if [ -z "$import_name" ]; then
        import_name=$module_name
    fi
    
    echo -n "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º $module_name ($import_name)... "
    
    python3 -c "
import sys
try:
    import $import_name
    if hasattr($import_name, '__version__'):
        print(f'‚úÖ OK - –≤–µ—Ä—Å–∏—è: {$import_name.__version__}')
    else:
        print('‚úÖ OK - –≤–µ—Ä—Å–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')
except ImportError as e:
    print(f'‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: {e}')
except Exception as e:
    print(f'‚ö†Ô∏è  –û–®–ò–ë–ö–ê: {e}')
    " 2>/dev/null || echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è
install_module() {
    local module_name=$1
    echo "üîß –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $module_name..."
    pip3 install "$module_name" --user --quiet
    if [ $? -eq 0 ]; then
        echo "‚úÖ $module_name —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $module_name"
    fi
}

echo "1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–´–• –ü–†–û–ë–õ–ï–ú–ù–´–• –ú–û–î–£–õ–ï–ô"
echo "----------------------------------------"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–¥—É–ª–∏
check_module "opencv-python-headless" "cv2"
check_module "PyWavelets" "pywt" 
check_module "diffusers" "diffusers"
check_module "transformers" "transformers"
check_module "accelerate" "accelerate"

echo ""
echo "2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ú–û–î–£–õ–ï–ô –ò–ó REQUIREMENTS"
echo "------------------------------------------------"

# –î—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏ –∏–∑ requirements.txt
check_module "pillow" "PIL"
check_module "numpy" "numpy"
check_module "mediapipe" "mediapipe"
check_module "onnxruntime-gpu" "onnxruntime"
check_module "scikit-image" "skimage"
check_module "torchvision" "torchvision"
check_module "requests" "requests"
check_module "tqdm" "tqdm"
check_module "imageio-ffmpeg" "imageio_ffmpeg"
check_module "setuptools" "setuptools"
check_module "wheel" "wheel"
check_module "matplotlib-inline" "matplotlib_inline"
check_module "ipython" "IPython"
check_module "gguf" "gguf"
check_module "sageattention" "sageattention"

echo ""
echo "3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò"
echo "--------------------------------"

echo "üêç Python –≤–µ—Ä—Å–∏—è:"
python3 --version

echo ""
echo "üìÇ Python –ø—É—Ç—å:"
python3 -c "import sys; print('\\n'.join(sys.path))"

echo ""
echo "üè† Pip –≤–µ—Ä—Å–∏—è:"
pip3 --version

echo ""
echo "üìç Pip —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:"
python3 -c "import site; print('User site:', site.getusersitepackages())"

echo ""
echo "4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó REQUIREMENTS.TXT"
echo "-------------------------"

if [ -f "requirements.txt" ]; then
    echo "üìã –ù–∞–π–¥–µ–Ω requirements.txt, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..."
    echo ""
    
    # –ß–∏—Ç–∞–µ–º requirements.txt –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø–∞–∫–µ—Ç
    while IFS= read -r line; do
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        if [[ ! "$line" =~ ^[[:space:]]*# ]] && [[ -n "$(echo "$line" | tr -d '[:space:]')" ]]; then
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–∞–∫–µ—Ç–∞ (–¥–æ >=, ==, –∏ —Ç.–¥.)
            package_name=$(echo "$line" | sed 's/[><=!].*//' | tr -d '[:space:]')
            if [ -n "$package_name" ]; then
                echo "üì¶ –ò–∑ requirements: $package_name"
                pip3 show "$package_name" --quiet > /dev/null 2>&1
                if [ $? -eq 0 ]; then
                    version=$(pip3 show "$package_name" 2>/dev/null | grep "Version:" | cut -d' ' -f2)
                    echo "   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $version"
                else
                    echo "   ‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù"
                fi
            fi
        fi
    done < requirements.txt
else
    echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "5Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ"
echo "------------------------------"

missing_critical=()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –º–æ–¥—É–ª–∏
python3 -c "import cv2" 2>/dev/null || missing_critical+=("opencv-python-headless")
python3 -c "import pywt" 2>/dev/null || missing_critical+=("PyWavelets")
python3 -c "import diffusers" 2>/dev/null || missing_critical+=("diffusers")
python3 -c "import sageattention" 2>/dev/null || missing_critical+=("sageattention")

if [ ${#missing_critical[@]} -gt 0 ]; then
    echo "üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–ï –ú–û–î–£–õ–ò:"
    for module in "${missing_critical[@]}"; do
        echo "   - $module"
    done
    echo ""
    echo "üí° –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   pip3 install ${missing_critical[*]}"
    echo ""
    
    read -p "ü§ñ –•–æ—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏..."
        for module in "${missing_critical[@]}"; do
            install_module "$module"
        done
        
        echo ""
        echo "üîÑ –ü–û–í–¢–û–†–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï –£–°–¢–ê–ù–û–í–ö–ò"
        echo "------------------------------------"
        check_module "opencv-python-headless" "cv2"
        check_module "PyWavelets" "pywt" 
        check_module "diffusers" "diffusers"
        check_module "sageattention" "sageattention"
    fi
else
    echo "‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –º–æ–¥—É–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
fi

echo ""
echo "6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–õ–ò–ö–¢–û–í –í–ï–†–°–ò–ô"
echo "-----------------------------"

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã numpy..."
python3 -c "
import numpy as np
print(f'NumPy –≤–µ—Ä—Å–∏—è: {np.__version__}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –ø–∞–∫–µ—Ç–∞–º–∏
try:
    import torch
    print(f'PyTorch –≤–µ—Ä—Å–∏—è: {torch.__version__}')
    print(f'PyTorch —Ç—Ä–µ–±—É–µ—Ç numpy: —Å–æ–≤–º–µ—Å—Ç–∏–º–æ')
except ImportError:
    print('PyTorch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

try:
    import cv2
    print(f'OpenCV –≤–µ—Ä—Å–∏—è: {cv2.__version__}')
    print('OpenCV —Å–æ–≤–º–µ—Å—Ç–∏–º —Å numpy')
except ImportError:
    print('OpenCV –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–π"

echo ""
echo "üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢"
echo "================"
echo "–î–∞—Ç–∞: $(date)"
echo "–°–∏—Å—Ç–µ–º–∞: $(uname -a)"
echo "–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º."