#!/usr/bin/env bash
set -euo pipefail

VOL=/runpod-volume
# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ë–∞–∑–æ–≤—ã–π ComfyUI —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ /ComfyUI (–∏–∑ —Ç–µ–º–ø–ª–µ–π—Ç–∞)
# –Ω–æ –º—ã —Å–æ–∑–¥–∞–ª–∏ —Å–∏–º–ª–∏–Ω–∫ /workspace/ComfyUI -> /ComfyUI –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
APP=/workspace/ComfyUI
BASE_COMFYUI=/ComfyUI

echo "üöÄ Optimized ComfyUI startup with volume mounting (template v8 compatible)..."

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ComfyUI –Ω–∞ volume –∏ –≤—ã–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
if [ -d "$VOL/ComfyUI" ] && [ -f "$VOL/ComfyUI/main.py" ]; then
    echo "‚úÖ ComfyUI –Ω–∞–π–¥–µ–Ω –Ω–∞ volume, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é"
    APP="$VOL/ComfyUI"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏–º–ª–∏–Ω–∫ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if [ ! -L "/workspace/ComfyUI" ] || [ "$(readlink /workspace/ComfyUI)" != "$VOL/ComfyUI" ]; then
        rm -rf /workspace/ComfyUI
        ln -sf "$VOL/ComfyUI" /workspace/ComfyUI
    fi
else
    echo "üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π ComfyUI –∏–∑ —Ç–µ–º–ø–ª–µ–π—Ç–∞: $BASE_COMFYUI -> $APP"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∏–º–ª–∏–Ω–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Å–æ–∑–¥–∞–Ω –≤ Dockerfile)
    if [ ! -L "$APP" ]; then
        echo "‚ö†Ô∏è –°–∏–º–ª–∏–Ω–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º: $BASE_COMFYUI -> $APP"
        mkdir -p /workspace
        ln -sf "$BASE_COMFYUI" "$APP"
    fi
    
    # 2. –ë—ã—Å—Ç—Ä–æ–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ bind mount
    echo "‚è© Fast mounting models..."
    if [ -d "$VOL/ComfyUI/models" ]; then
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –º–æ–¥–µ–ª–µ–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if [ -d "$BASE_COMFYUI/models" ] && [ ! -L "$BASE_COMFYUI/models" ]; then
            mv "$BASE_COMFYUI/models" "$BASE_COMFYUI/models.original" 2>/dev/null || true
        fi
        # –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º–æ–π —Å–∏–º–ª–∏–Ω–∫ –Ω–∞ –º–æ–¥–µ–ª–∏ —Å volume
        rm -rf "$BASE_COMFYUI/models"
        ln -sf "$VOL/ComfyUI/models" "$BASE_COMFYUI/models"
        echo "‚úÖ –ú–æ–¥–µ–ª–∏ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã: $VOL/ComfyUI/models -> $BASE_COMFYUI/models"
    fi

    # 3. –ë—ã—Å—Ç—Ä–æ–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º –Ω–æ–¥–æ–≤
    echo "‚è© Fast mounting custom nodes..."
    if [ -d "$VOL/ComfyUI/custom_nodes" ]; then
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Å—Ç–æ–º –Ω–æ–¥—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ  
        if [ -d "$BASE_COMFYUI/custom_nodes" ] && [ ! -L "$BASE_COMFYUI/custom_nodes" ]; then
            mv "$BASE_COMFYUI/custom_nodes" "$BASE_COMFYUI/custom_nodes.original" 2>/dev/null || true
        fi
        # –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º–æ–π —Å–∏–º–ª–∏–Ω–∫ –Ω–∞ –∫–∞—Å—Ç–æ–º –Ω–æ–¥—ã —Å volume
        rm -rf "$BASE_COMFYUI/custom_nodes"
        ln -sf "$VOL/ComfyUI/custom_nodes" "$BASE_COMFYUI/custom_nodes"
        echo "‚úÖ –ö–∞—Å—Ç–æ–º –Ω–æ–¥—ã —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã: $VOL/ComfyUI/custom_nodes -> $BASE_COMFYUI/custom_nodes"
    fi

    # 4. –ú–æ–Ω—Ç–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    for dir in input output user temp; do
        if [ -d "$VOL/ComfyUI/$dir" ]; then
            rm -rf "$BASE_COMFYUI/$dir" 2>/dev/null || true
            ln -sf "$VOL/ComfyUI/$dir" "$BASE_COMFYUI/$dir"
            echo "‚úÖ –ü–∞–ø–∫–∞ $dir —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞"
        fi
    done
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
echo "üìÅ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ComfyUI:"
echo "APP –ø—É—Ç—å: $APP"
ls -la "$APP/" | head -10

echo "‚è© DEBUG"
./debug-modules.sh

# 5. –ó–∞–ø—É—Å–∫–∞–µ–º ComfyUI (–±–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞) –≤ —Ñ–æ–Ω–µ
echo "‚è© Starting ComfyUI from: $APP"
cd "$APP"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ main.py
if [ ! -f "main.py" ]; then
    echo "‚ùå main.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $APP"
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    ls -la
    exit 1
fi

echo "üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:"
echo "üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ main.py:"
ls -la main.py
echo "üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º models –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é:"
if [ -d "models" ]; then
    echo "‚úÖ models –Ω–∞–π–¥–µ–Ω–∞"
    ls -la models/ | head -5
else
    echo "‚ö†Ô∏è models –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi
echo "üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º custom_nodes –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é:"  
if [ -d "custom_nodes" ]; then
    echo "‚úÖ custom_nodes –Ω–∞–π–¥–µ–Ω–∞"
    ls -la custom_nodes/ | head -5
else
    echo "‚ö†Ô∏è custom_nodes –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi
echo "üêç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞ ComfyUI –º–æ–¥—É–ª–µ–π:"
python -c "import sys; sys.path.append('.'); import folder_paths; print('‚úÖ folder_paths –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>/dev/null || echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–æ–º folder_paths"

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º ComfyUI —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p /workspace/ComfyUI/user
# –ó–∞–ø—É—Å–∫–∞–µ–º ComfyUI —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–æ–≥–æ–≤ –≤ –æ–±–∞ –º–µ—Å—Ç–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
python -u main.py --verbose 2>&1 | tee /tmp/comfyui.log /workspace/ComfyUI/user/comfyui.log &
COMFY_PID=$!
echo "üÜî ComfyUI PID: $COMFY_PID"
echo "üìù –õ–æ–≥–∏ ComfyUI –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤:"
echo "   - /tmp/comfyui.log"
echo "   - /workspace/ComfyUI/user/comfyui.log"

# 6. –ñ–¥—ë–º –ø–æ—Ä—Ç 8188 (–º–∞–∫—Å. 60 —Å - —É–≤–µ–ª–∏—á–∏–ª –≤—Ä–µ–º—è –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
echo "‚è© Waiting for ComfyUI to start on port 8188..."
sleep 2  # –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
echo "üìã –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ ComfyUI:"
head -20 /tmp/comfyui.log 2>/dev/null || echo "–õ–æ–≥ –ø–æ–∫–∞ –ø—É—Å—Ç–æ–π"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

for i in {1..60}; do
  if nc -z localhost 8188; then
    echo "‚úÖ ComfyUI is ready on port 8188"
    break
  fi
  if ! kill -0 $COMFY_PID 2>/dev/null; then
    echo "‚ùå ComfyUI process died"
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞:"
    tail -50 /tmp/comfyui.log 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    exit 1
  fi
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
  process_state=$(ps -o state= -p $COMFY_PID 2>/dev/null | tr -d ' ')
  if [ "$process_state" = "D" ]; then
    echo "‚ö†Ô∏è ComfyUI –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ uninterruptible sleep (D) - –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å I/O"
    echo "üìã –õ–æ–≥–∏ ComfyUI:"
    tail -50 /tmp/comfyui.log 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
  fi
  echo "‚è≥ Waiting... ($i/60)"
  
  # –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
  if [ $((i % 10)) -eq 0 ]; then
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ ComfyUI (–ø–æ–ø—ã—Ç–∫–∞ $i):"
    tail -10 /tmp/comfyui.log 2>/dev/null || echo "–õ–æ–≥ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
  fi
  
  sleep 1
done

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Ä—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫—Ä—ã—Ç
if ! nc -z localhost 8188; then
    echo "‚ùå ComfyUI failed to start on port 8188 after 60 seconds"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å ComfyUI:"
    ps aux | grep python || true
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:"
    ss -tlnp | grep 8188 || echo "–ü–æ—Ä—Ç 8188 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "üìã –í—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:"
    ss -tlnp || echo "–ö–æ–º–∞–Ω–¥–∞ ss –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    echo "üìã –ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏ ComfyUI:"
    cat /tmp/comfyui.log 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    exit 1
fi

echo "‚úÖ ComfyUI started successfully!"

# 8. –°—Ç–∞—Ä—Ç—É–µ–º serverless-handler
echo "‚è© Starting serverless handler..."
# –ò–ó–ú–ï–ù–ï–ù–ò–ï: handler.py —Ç–µ–ø–µ—Ä—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ—Ä–µ–Ω—å (–Ω–µ –≤ ComfyUI –ø–∞–ø–∫—É)
exec python -u /handler.py