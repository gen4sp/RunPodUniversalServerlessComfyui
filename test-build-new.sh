#!/usr/bin/env bash
set -euo pipefail

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ Docker –æ–±—Ä–∞–∑–∞ –Ω–∞ –±–∞–∑–µ runpod/pytorch:2.8.0

IMAGE_NAME="runpod-comfy-universal:new"
CONTAINER_NAME="test-runpod-comfy-new"

echo "üèóÔ∏è –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ Docker –æ–±—Ä–∞–∑–∞..."
docker build -t "$IMAGE_NAME" .

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞..."
# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
docker run --rm \
    --name "$CONTAINER_NAME-test" \
    --gpus all \
    -e SKIP_MODEL_DOWNLOAD=1 \
    "$IMAGE_NAME" \
    python -c "
import torch
import runpod
import sys
import os

print('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...')
print(f'Python –≤–µ—Ä—Å–∏—è: {sys.version}')
print(f'PyTorch –≤–µ—Ä—Å–∏—è: {torch.__version__}')
print(f'CUDA –¥–æ—Å—Ç—É–ø–Ω–∞: {torch.cuda.is_available()}')

if torch.cuda.is_available():
    print(f'CUDA –≤–µ—Ä—Å–∏—è: {torch.version.cuda}')
    print(f'GPU —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {torch.cuda.device_count()}')
    for i in range(torch.cuda.device_count()):
        print(f'GPU {i}: {torch.cuda.get_device_name(i)}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ComfyUI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
if os.path.exists('/workspace/ComfyUI/main.py'):
    print('‚úÖ ComfyUI –Ω–∞–π–¥–µ–Ω –≤ /workspace/ComfyUI/')
else:
    print('‚ùå ComfyUI –ù–ï –Ω–∞–π–¥–µ–Ω –≤ /workspace/ComfyUI!')
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º handler.py
if os.path.exists('/handler.py'):
    print('‚úÖ Handler –Ω–∞–π–¥–µ–Ω')
else:
    print('‚ùå Handler –ù–ï –Ω–∞–π–¥–µ–Ω!')
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º start.sh
if os.path.exists('/start.sh'):
    print('‚úÖ Start script –Ω–∞–π–¥–µ–Ω')
else:
    print('‚ùå Start script –ù–ï –Ω–∞–π–¥–µ–Ω!')
    sys.exit(1)

print('üéâ –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
"

echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo "üì¶ –û–±—Ä–∞–∑ '$IMAGE_NAME' –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞
echo "üìä –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞:"
docker images "$IMAGE_NAME" --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

echo ""
echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "docker run --rm --gpus all -p 8188:8188 -v \$(pwd)/test-volume:/runpod-volume $IMAGE_NAME"